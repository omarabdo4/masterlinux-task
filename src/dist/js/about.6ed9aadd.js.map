{"version":3,"sources":["webpack:///./src/views/Exam.vue","webpack:///./src/views/Exam.vue?ea33","webpack:///./src/views/Score.vue","webpack:///./src/views/Score.vue?a7ff","webpack:///./src/views/Question.vue","webpack:///./src/views/Question.vue?87dc","webpack:///./src/views/About.vue","webpack:///./src/views/About.vue?008a"],"names":["type","name","required","class","startExam","data","methods","this","$store","commit","$router","push","params","qindex","getQuestions","dispatch","mounted","render","score","retake","computed","resetModuleState","question","content","answers","answer","key","_id","id","value","answerId","for","addAnswer","isLastQuestion","getQuestionByIndex","index","getters","qid","aid","questionId","loadQuestion","parseInt","$route","created","script"],"mappings":"4IAEI,eAAwB,UAApB,mBAAe,G,gDADrB,eAKM,YAJJ,E,eACA,eAA2C,SAApCA,KAAK,O,qDAAgB,EAAAC,KAAI,IAAEC,SAAA,I,mBAAN,EAAAD,QAC5B,eAAsE,UAA9DE,MAAM,kBAAmB,QAAK,8BAAE,EAAAC,WAAA,EAAAA,UAAA,sBAAW,gBAMxC,OACXC,KADW,WAEP,MAAM,CACFJ,KAAK,KAGbK,QAAQ,CACJF,UADI,WAEGG,KAAKN,OACJM,KAAKC,OAAOC,OAAO,mBAAmBF,KAAKN,MAC3CM,KAAKG,QAAQC,KAAK,CAAEV,KAAM,WAAYW,OAAQ,CAAEC,OAAQ,SAGhEC,aAPI,WAQAP,KAAKC,OAAOO,SAAS,2BAG7BC,QAjBW,WAkBPT,KAAKO,iBCzBb,EAAOG,OAASA,EAED,gB,qHCJb,eAMM,YALJ,eAA4D,yBAAtD,EAAAhB,MAAM,kBAAe,eAAE,EAAAiB,OAAO,sBAAmB,GAEvD,eAEK,WADD,eAAsF,UAA9Ef,MAAM,kBAAmB,QAAK,8BAAE,EAAAgB,QAAA,EAAAA,OAAA,sBAAQ,qC,4BAQzC,GACXC,SAAQ,kBACD,eAAW,CACVnB,KAAM,mBACNiB,MAAO,uBAGfZ,QAAS,CACLa,OADK,WAEDZ,KAAKc,mBACLd,KAAKG,QAAQC,KAAK,CAAEV,KAAM,UAE9BoB,iBALK,WAMDd,KAAKC,OAAOC,OAAO,gCCvB/B,EAAOQ,OAASA,EAED,gB,4DCJRd,MAAM,a,gDAAX,eASM,MATN,EASM,CARJ,eAA6B,yBAAvB,EAAAmB,SAASC,SAAO,I,mBACtB,eAKM,2BAL6B,EAAAD,SAASE,SAAO,SAA1BC,G,wBAAzB,eAKM,OALDtB,MAAM,OAA2CuB,IAAKD,EAAOE,K,gBAC9D,eAAiI,SAA1HxB,MAAM,wBAAwBH,KAAK,QAAU4B,GAAIH,EAAOE,IAAME,MAAOJ,EAAOE,I,qDAAc,EAAAG,SAAQ,IAAE7B,KAAK,kB,gCAAf,EAAA6B,YACjG,eAEQ,SAFD3B,MAAM,mBAAoB4B,IAAKN,EAAOE,K,eACvCF,EAAOF,SAAO,gB,MAGmC,EAAAO,U,iBAA3D,eAAsH,U,MAA9G3B,MAAM,kBAAmB,QAAK,8BAAE,EAAA6B,WAAA,EAAAA,UAAA,sB,eAAgC,EAAAC,eAAc,qB,wBAO3E,OACX5B,KADW,WAEP,MAAO,CACHQ,OAAO,KACPS,SAAS,KACTW,gBAAe,EACfH,SAAS,OAGjBxB,QAAS,CACL4B,mBADK,SACcC,GACf5B,KAAKe,SAAWf,KAAKC,OAAO4B,QAAQ,+BAA+BD,IAEvEH,UAJK,WAKD,IAAMK,EAAM9B,KAAKe,SAASM,GACpBU,EAAM/B,KAAKuB,SACXjB,EAASN,KAAKM,OACpBN,KAAKC,OAAOC,OAAO,qBAAqB,CACpC8B,WAAWF,EACXP,SAASQ,IAEV/B,KAAK0B,gBACJ1B,KAAKC,OAAOO,SAAS,wBACrBR,KAAKG,QAAQC,KAAK,CAAEV,KAAM,WAE1BM,KAAKG,QAAQC,KAAK,CAAEV,KAAM,WAAYW,OAAQ,CAAEC,OAAQA,EAAS,MAGzE2B,aAnBK,WAoBD,IAAM3B,EAAS4B,SAASlC,KAAKmC,OAAO9B,OAAOC,QAC3CN,KAAKM,OAASA,EACdN,KAAK2B,mBAAmBrB,GACxBN,KAAK0B,eAA2B,GAAVpB,IAG9B8B,QAnCW,WAoCPpC,KAAKiC,gBAETxB,QAtCW,WAuCPT,KAAKiC,iBCpDb,EAAOvB,OAASA,EAED,gB,4DCJRd,MAAM,S,EACT,eAA8B,UAA1B,yBAAqB,G,wCAD3B,eAEM,MAFN,EAEM,CADJ,ICDJ,MAAMyC,EAAS,GACfA,EAAO3B,OAASA,EAED","file":"js/about.6ed9aadd.js","sourcesContent":["<template>\n  <div>\n    <h1>Enter Your Name</h1>\n    <input type=\"text\" v-model=\"name\" required>\n    <button class=\"btn btn-primary\" @click=\"startExam\">Start Exam</button>\n\n  </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return{\n            name:\"\"\n        }\n    },\n    methods:{\n        startExam(){\n            if(this.name){\n                this.$store.commit('question/setName',this.name)\n                this.$router.push({ name: 'question', params: { qindex: '0' }})\n            }\n        },\n        getQuestions(){\n            this.$store.dispatch('question/getQuestions')\n        }\n    },\n    mounted(){\n        this.getQuestions()\n    },\n}\n</script>","import { render } from \"./Exam.vue?vue&type=template&id=32ff0965\"\nimport script from \"./Exam.vue?vue&type=script&lang=js\"\nexport * from \"./Exam.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <h1>{{name}}, you answered {{score}} correctly out of 5</h1>\n\n    <h3>\n        <button class=\"btn btn-success\" @click=\"retake\">Click Here To Retake The Exam</button>\n    </h3>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n    computed:{\n        ...mapGetters({\n            name: 'question/getName',\n            score: 'question/getScore'\n        })\n    },\n    methods: {\n        retake(){\n            this.resetModuleState()\n            this.$router.push({ name: 'exam'})\n        },\n        resetModuleState(){\n            this.$store.commit('question/resetModuleState')\n        }\n    },\n}\n</script>","import { render } from \"./Score.vue?vue&type=template&id=04b85820\"\nimport script from \"./Score.vue?vue&type=script&lang=js\"\nexport * from \"./Score.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"container\">\n    <h2>{{question.content}}</h2>\n    <div class=\"my-2\" v-for=\"answer in question.answers\" :key=\"answer._id\">\n        <input class=\"form-check-input me-2\" type=\"radio\"  :id=\"answer._id\" :value=\"answer._id\" v-model=\"answerId\" name=\"questionAnswer\">\n        <label class=\"form-check-label\" :for=\"answer._id\">\n            {{answer.content}}\n        </label>\n    </div>\n    <button class=\"btn btn-primary\" @click=\"addAnswer\" v-if=\"!!answerId\">{{ isLastQuestion ? \"Finish\" : \"Next\" }}</button>\n  </div>\n</template>\n\n\n<script>\n\nexport default {\n    data(){\n        return {\n            qindex:null,\n            question:null,\n            isLastQuestion:false,\n            answerId:null\n        }\n    },\n    methods: {\n        getQuestionByIndex(index){\n            this.question = this.$store.getters['question/getQuestionByIndex'](index)\n        },\n        addAnswer(){\n            const qid = this.question.id\n            const aid = this.answerId\n            const qindex = this.qindex\n            this.$store.commit('question/addAnswer',{\n                questionId:qid,\n                answerId:aid\n            })\n            if(this.isLastQuestion){\n                this.$store.dispatch('question/sendAnswers')\n                this.$router.push({ name: 'score'})\n            }else{\n                this.$router.push({ name: 'question', params: { qindex: qindex + 1 }})\n            }\n        },\n        loadQuestion(){\n            const qindex = parseInt(this.$route.params.qindex)\n            this.qindex = qindex\n            this.getQuestionByIndex(qindex)\n            this.isLastQuestion = qindex == 4\n        }\n    },\n    created(){\n        this.loadQuestion()\n    },\n    mounted(){\n        this.loadQuestion()\n    },\n}\n</script>","import { render } from \"./Question.vue?vue&type=template&id=605d07b6\"\nimport script from \"./Question.vue?vue&type=script&lang=js\"\nexport * from \"./Question.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n  </div>\n</template>\n","import { render } from \"./About.vue?vue&type=template&id=1ae8a7be\"\nconst script = {}\nscript.render = render\n\nexport default script"],"sourceRoot":""}